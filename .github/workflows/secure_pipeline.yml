name: DevSecOps Security Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security_scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies and Tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Run Bandit Security Scan
        run: |
          bandit -r . -f json -o bandit-report.json || echo '{"results": []}' > bandit-report.json
        continue-on-error: true

      - name: Run Safety Dependency Scan
        run: |
          safety check -r requirements.txt -f json > safety-report.json || echo '{"vulnerabilities": []}' > safety-report.json
        continue-on-error: true

      - name: Upload Security Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  docker_scan:
    name: Docker Security Scanning
    runs-on: ubuntu-latest
    needs: security_scan

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Run Docker Scout Analysis
        run: |
          docker scout quickview your-dockerhub-username/your-docker-image:latest --format json > docker-scout-report.json || echo '{"issues": []}' > docker-scout-report.json
        continue-on-error: true

      - name: Upload Docker Scout Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-scout-report
          path: docker-scout-report.json

  ai_fix_suggestions:
    name: AI Fix Suggestions
    runs-on: ubuntu-latest
    needs: [security_scan, docker_scan]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Security Reports
        uses: actions/download-artifact@v4
        with:
          name: security-reports

      - name: Download Docker Scout Report
        uses: actions/download-artifact@v4
        with:
          name: docker-scout-report

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python Dependencies
        run: pip install requests PyGithub

      - name: Upload Pre-Generated AI Fix Suggestions
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-fix-suggestions
          path: fix_suggestions.txt
